name: Unit tests

on:
  push:
    paths-ignore:
      - "notes/**"
  pull_request:
    paths-ignore:
      - "notes/**"

jobs:
  lint:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Lint w/ ruff - syntax error or undefined names
        run: |
          ruff check scanprops.py

  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    needs: lint

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Test w/ pytest
        run: |
          pytest

  style:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black toml
      - name: Format source w/ black
        # fail when file(s) would be formatted
        run: black --check .

  type-hints:
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        continue-on-error: true
        # b/c mypy returns non-zero code, and the step fails
        run: |
          python -m pip install --upgrade pip
          pip install mypy{,_extensions}
          echo y | mypy --install-types
      - name: Type check w/ mypy
        run: mypy --check-untyped-defs --pretty
